{
  "hash": "73a1b13058a58a9e505934046c7d318b",
  "result": {
    "markdown": "---\ntitle: \"Modeling Canadian Rent Data and Visualizing Using Power BI\"\nauthor: \"Victor Lao\"\ndate: 2024-05-28\noutput:\n  blogdown::html_page:\ntoc: true\n---\n\n\n## Introduction\n\nRentals play an important role in providing housing for residents of Canada. Recent economic stresses have created volatility in the rental market highlighting the need for both renters and landlords to stay up to date on current factors driving rent prices. To address the need for information, I created a rental market dashboard with data from Statistics Canada and CMHC and forecasted rent prices in Power BI.\n\n## Methodology\n\nData was taken from APIs from Statistics Canada and CMHC portals. Data was transformed and rent was modeled. Best performing model was selected and used to forecast the next year. Data is then visualized in Power BI.\n\n### Obtaining data from Statistics Canada and CMHC\n\nStatistics Canada releases economic data and indicators for Canada. They make their data available through an API. cansim is an R wrapper around their API that makes it easier to retrieve standardized data in R. The Canadian Mortgage and Housing Corporation (CMHC) releases housing and rental data for Canada. This information is made available through their data portal. cmhc is an R package written to obtain data from that portal. A list of sgc codes is required for cmhc. A list of provinces (excluding territories) was provided.\n\nTime series of several economic indicators were taken from Statistics Canada in order to provide exogenous regressors for modeling. Data from CMHC, including rent prices, was taken and combined with data from CMHC on date, geography and rental room type.\n\n### Modeling Rent Prices\n\nRent price per year was adjusted by consumer price index to account for inflation. They were also transformed to percent rent price change per year to create a more stationary response variable for models that perform better on stationary data.\n\nRent price was modeled by ARIMA, ETS, linear regression, drift, mean and naive. Mean, naive and drift models were used as a baseline. Model performance was assessed by time series cross validation with a forecast of one year. Models were compared with RMSSE to account for scale differences between models trained on rent price vs those trained on percentage rent price per year (depending on model requirements).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbase_models <- tscv_model_data |>\n  model(\n    mean = MEAN(avg_rent_cpi_adj_pct_change),\n    naive = NAIVE(avg_rent_cpi_adj_pct_change)\n  )\nrw_models <- tscv_model_data |>\n  model(\n    drift = RW(avg_rent_cpi_adj ~ drift())\n  )\narima_models <- tscv_model_data |>\n  model(\n    arima = ARIMA(avg_rent_cpi_adj_pct_change)\n  )  \nets_models <- tscv_model_data |>\n  model(\n    ets = ETS(avg_rent_cpi_adj)\n  )\nlinear_models <- lagged_tscv_model_data |>\n  model(\n    base_linear = TSLM(avg_rent_cpi_adj_pct_change ~ lagged_rental_supply_per_person_pct_change + lagged_five_year_mortgage_change),\n    trended_linear = TSLM(avg_rent_cpi_adj_pct_change ~ trend() + lagged_rental_supply_per_person_pct_change + lagged_five_year_mortgage_change)\n  )\n```\n:::\n\n\nLjung box test was used to check residuals on the longest cross validation set. Models failing test were removed prior to model selection.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nget_ljung_box <- function(model, lag) {\n  ljung_box_stats <- model |>\n    augment() |>\n    features(.innov, ljung_box, lag = lag) |>\n    filter(`.id` == max(`.id`, na.rm = TRUE)) |> \n    select(-`.id`)\n  \n  return(ljung_box_stats)\n}\n\nbase_residuals <- base_models |>\n  get_ljung_box(lag = 4)\nrw_residuals <- rw_models |>\n  get_ljung_box(lag = 4)\narima_residuals <- arima_models |>\n  get_ljung_box(lag = 4)\nets_residuals <- ets_models |>\n  get_ljung_box(lag = 4)\nlinear_residuals <- linear_models |>\n  get_ljung_box(lag = 4)\n```\n:::\n\n\n### Visualizing Data in Power BI\n\nTo visualize rent data in Power BI, relevant tables were converted to excel format prior to ingestion.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnamed_excel_table_list <- list(\n  avg_rent = avg_rent_data,\n  provincial_room_indicators = yearly_provincial_room_indicators_data,\n  provincial_indicators = yearly_provincial_indicators_data,\n  indicators = yearly_indicators_data,\n  forecast = yearly_forecast_table\n)\n\ncreate_canadian_rent_excel_tables <- function(named_excel_table_list) {\n  workbook <- createWorkbook()\n  \n  table_names <- names(named_excel_table_list)\n  \n  create_excel_pages_and_tables <- function(table_name, table) {\n    addWorksheet(workbook, table_name)\n    writeDataTable(workbook, sheet = table_name, x = table, tableName = table_name)\n  }\n  \n  mapply(\n    create_excel_pages_and_tables,\n    table_name = table_names,\n    table = named_excel_table_list\n  )\n  \n  return(workbook)\n}\n\nexcel_workbook <- named_excel_table_list |>\n  create_canadian_rent_excel_tables()\n```\n:::\n\n\nIn Power BI a new table was created to visualize forecasting data using DAX.\n\n\n::: {.cell}\n\n```{.dax .cell-code}\nforecast_viz = ADDCOLUMNS(\n  DISTINCT(\n    UNION(\n      SELECTCOLUMNS(\n        avg_rent, \"year\", avg_rent[year], \"geography\", avg_rent[Geography], \n        \"room_type\", avg_rent[room_type], \"Average Rent\", avg_rent[Rent], \n        \"Average Rent % Change\", [avg_rent_pct_change], \"80% Upper Confidence\",\n        avg_rent[Rent], \"Percent 80% Upper Confidence\", \n        avg_rent[avg_rent_pct_change], \"80% Lower Confidence\", avg_rent[Rent], \n        \"Percent 80% Lower Confidence\", avg_rent[avg_rent_pct_change]\n      ), \n      SELECTCOLUMNS(\n        forecast, \"year\", forecast[year], \"geography\", forecast[geography], \n        \"room_type\", forecast[room_type], \"Average Rent\", forecast[forecast], \n        \"Average Rent % Change\", forecast[pct_forecast], \"80% Upper Confidence\", \n        forecast[upper], \"Percent 80% Upper Confidence\", forecast[pct_upper], \n        \"80% Lower Confidence\", forecast[lower], \"Percent 80% Lower Confidence\", \n        forecast[pct_lower]\n      )\n    )\n  ), \n  \"geography_room\", CONCATENATE([geography], [room_type])\n)\n```\n:::\n\n\nData model was organized as shown below:\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](canadian_provincial_rent_powerbi_model.png){fig-align='center' width=544}\n:::\n:::\n\n\nImportantly, several indicators were connected through a concatenation of geography and room type to ensure cross filtering would work across both variables.\n\n## References\n\nO'Hara-Wild M, Hyndman R, Wang E (2024). *fable: Forecasting Models for Tidy Time Series*. R package version 0.3.4, <https://CRAN.R-project.org/package=fable>\n\nO'Hara-Wild M, Hyndman R, Wang E (2024). *feasts: Feature Extraction and Statistics for Time Series*. R package version 0.3.2, <https://CRAN.R-project.org/package=feasts>.\n\nvon Bergmann and Shkolnik (2021). *cansim: Accessing Statistics Canada Data Table and Vectors*. <https://CRAN.R-project.org/package=cansim>.\n\nvon Bergmann J (2023). *cmhc: Access, Retrieve, and Work with CMHC Data*. R package version 0.2.7, <https://CRAN.R-project.org/package=cmhc>.\n\nWickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). \"Welcome to the *tidyverse.*\" Journal of Open Source Software, 4(43), 1686. <doi:10.21105/joss.01686>.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}
{
  "hash": "9964bd87b5b364848c3a5ce4ad7e6c03",
  "result": {
    "markdown": "---\ntitle: \"Shiny App of Metacritic Featured Games Throughout Time\"\nauthor: \"Victor Lao\"\ndate: 2024-04-18\noutput:\n  blogdown::html_page:\ntoc: true\n---\n\n\n## Introduction\n\nGaming is a rapidly growing industry with a consumer history that stretches back to the 1970s. Throughout the years many games have been released that have had profound impact on the gaming community. To sift through the quantity of releases, video game critics have established themselves as core members of the gaming ecosystem. Metacritic is a website that aggregates video game (among other mediums) reviews and has proven to be highly influential.\n\nTaking the history of games featured on Metacritic and diving into the data can reveal many insights into the historic interplay between games and consumer opinion. It can also help in suggesting high quality games to play (which may be my main motivator for this analysis...). Using Shiny can aid in this exploration by facilitating dynamic viewpoints of the data.\n\n## Methodology\n\nMetacritic data was obtained through Kaggle as a publicly available dataset (link: https://www.kaggle.com/datasets/beridzeg45/video-games). Data was obtained by the publisher through scraping the Metacritic website using Python libraries. \n\nData was then enriched through personal knowledge to create a more descriptive dataset. In brief, genres were condensed into 12 categories.\n\n::: {.cell}\n\n```{.r .cell-code}\n  mutate(\n    ...,\n    genre = case_when(\n      str_detect(genre, \"RPG\") ~ \"RPG\",\n      str_detect(genre, \"Adventure|Platform|Metroid|Point\") ~ \"Adventure\",\n      str_detect(genre, \"Strategy|RTS|Tactic|MOBA|Defense\") ~ \"Strategy\",\n      str_detect(genre, \"Racing\") ~ \"Racing\",\n      str_detect(genre, \"Fight\") ~ \"Fighter\",\n      str_detect(genre, \"Action|Beat|Arcade|Sandbox|Rougelike\") ~ \"Action\",\n      str_detect(genre, \"Shoot|FPS|Gun|Artillery\") ~ \"Shooter\",\n      str_detect(genre, \"Sim|Virtual|Manage|Tycoon|Visual Novel\") ~ \"Sim\",\n      str_detect(genre, \"Puzzle|Hidden|Trivia|Edutainment\") ~ \"Puzzle\",\n      str_detect(genre, \"Sport|Ball|ball|Golf|Ski|Wrest|Rugb|Hock|Billi|Tenn|Socc|Bik|Skat|Hunt|Surf|Crick|Bowl|Fish|Athlet|Gambl\") ~ \"Sport\",\n      str_detect(genre, \"Danc|Party|Rhythm|Exercise\") ~ \"Party\",\n      str_detect(genre, \"Survival\") ~ \"Survival\",\n      TRUE ~ \"Other\"\n    ),\n    ...\n  )\n```\n:::\n\nPlatform versions were grouped into console families.\n\n::: {.cell}\n\n```{.r .cell-code}\n  mutate(\n    platform_condensed = case_when(\n      str_detect(platform, \"iOS\") ~ \"Phone\",\n      str_detect(platform, \"Xbox\") ~ \"Xbox\",\n      str_detect(platform, \"Playstation|PlayStation|PSP\") ~ \"Playstation\",\n      str_detect(platform, \"Game|Wii|Nintendo|DS\") ~ \"Nintendo\",\n      str_detect(platform, \"Dreamcast\") ~ \"Dreamcast\",\n      str_detect(platform, \"PC\") ~ \"PC\",\n      str_detect(platform, \"Meta Quest\") ~ \"Meta VR\",\n      TRUE ~ \"Other\"\n    ),\n    ...\n  )\n```\n:::\n\nLocality of each platform was annotated.\n\n::: {.cell}\n\n```{.r .cell-code}\n  mutate(\n    ...,\n    locality = case_when(\n      str_detect(platform, \"iOS|PSP|DS|Game Boy\") ~ \"Mobile\",\n      TRUE ~ \"Home Console\"\n    ),\n    ...\n  )\n```\n:::\n\nExclusivity was determined by marking duplicated titles.\n\n::: {.cell}\n\n```{.r .cell-code}\n  mutate(\n    ...,\n    exclusivity = case_when(\n    duplicated(title) | duplicated(title, fromLast = TRUE) ~ \"Multi-Platform\",\n    TRUE ~ \"Exclusive\"\n    ),\n    ...\n  )\n```\n:::\n\nScores were annotated with colloquial interpretations to give a more accurate representation of sentiment.\n\n::: {.cell}\n\n```{.r .cell-code}\n  mutate(\n    ...,\n    metacritic_score = as.numeric(metacritic_score),\n    metacritic_score_factorized = case_when(\n      metacritic_score <= 50 ~ \"Poor\",\n      metacritic_score > 50 & metacritic_score <= 70 ~ \"Average\",\n      metacritic_score > 70 & metacritic_score <= 90 ~ \"Good\",\n      metacritic_score > 90 ~ \"Excellent\",\n      TRUE ~ \"Unscored\"\n    ),\n    ...\n  )\n```\n:::\n\nIndependence was defined as publishers with only one developer under them. It should be noted that the validity of this categorization increases with time as successful indie companies eventually become commercial.\n\n::: {.cell}\n\n```{.r .cell-code}\n  group_by(\n    publisher\n  ) |>\n  mutate(\n    total_developer_under_publisher = n_distinct(developer)\n  ) |>\n  ungroup() |>\n  mutate(\n    independance = case_when(\n      total_developer_under_publisher == 1 ~ \"Indie\",\n      TRUE ~ \"Commercial\"\n    )\n  )\n```\n:::\n\nThe full data cleaning manipulation procedure can be found on my github: https://github.com/Spingelhoff/video_game_analysis_2024/blob/main/video_game_analysis_2024.R\n\nCleaned data was then showcased through Shiny. Number of games featured were divided by genre and color coded by colloquial score categories in a stacked bar graph. Distribution of titles by user score and Metacritic score were plotted as a scatterplot. Both graphs were connected interactively via ggiraph. By hovering over each genre bar, the distribution of points on the score scatterplot corresponding to the genre selected is highlighted.\n\n::: {.cell}\n\n```{.r .cell-code}\noutput$combined_plot <- renderGirafe({\n    genre_plot <- ggplot(\n      yearly_genre_ratings(),\n      aes(x = fct_rev(genre), y = n_scored, fill = metacritic_score_factorized, data_id = genre)) +\n      geom_col_interactive(color = \"black\") +\n      coord_flip() +\n      theme_classic() +\n      scale_x_discrete(expand = c(0,0)) +\n      scale_y_continuous(expand = c(0,0)) +\n      scale_fill_brewer(palette = \"RdBu\", direction = -1) +\n      theme(\n        legend.position = \"bottom\",\n        text = element_text(size = 10)\n      ) +\n      xlab(\"# of Games\") +\n      ylab(\"Genre\") +\n      labs(\n        fill = \"Scoring\"\n      )\n    \n    ambivalence_plot <- ggplot(\n      yearly_ambivalence(),\n      aes(x = avg_user_score, y = avg_metacritic_score, size = critic_coverage, alpha = critic_coverage, color = classification, data_id = genre)) +\n      geom_point_interactive(\n        aes(tooltip = paste0(\n          \"Title: \", title, \"\\n\",\n          \"Genre: \", genre, \"\\n\",\n          \"Critic Score: \", avg_metacritic_score, \"\\n\",\n          \"User Score:\", avg_user_score, \"\\n\")\n        )\n      ) +\n      theme_classic() +\n      scale_color_manual(\n        name = \"Preference\",\n        values = c(\"#4F7EBB\", \"grey\", \"#BC3D41\")) +\n      scale_size_continuous(name = \"Coverage\") +\n      scale_alpha_continuous(name = \"Coverage\") +\n      theme(\n        legend.position = \"bottom\",\n        text = element_text(size = 10)\n      ) +\n      xlab(\"User Score\") +\n      ylab(\"Metacritic Score\") +\n      guides(\n        color = \"none\"\n      )\n    \n    girafe(ggobj = genre_plot + ambivalence_plot, width_svg = 12, height_svg = 5) |>\n      girafe_options(\n        opts_hover(css = \"stroke:black;stroke-width:2px;fill-opacity:1;\"),\n        opts_hover_inv(css = \"fill-opacity:0.2\"),\n        opts_selection(css = \"stroke:black;stroke-width:2px;fill-opacity:1;\",\n                       type = \"multiple\"),\n        opts_selection_inv(css = \"fill-opacity:0.2\")\n      )\n  })\n```\n:::\n\nTop 5 Metacritic and user scored games as well as most divergently scored Metacritic and user scored games were shown through tables. Finally, locality, exclusivity and independance of titles were plotted as pie charts.\n\n## References\n\nChang W, Cheng J, Allaire J, Sievert C, Schloerke B, Xie Y, Allen J, McPherson J, Dipert A, Borges B (2022). *shiny: Web Application Framework for R*. R package version 1.7.4, <https://CRAN.R-project.org/package=shiny>.\n\nDavid Gohel and Panagiotis Skintzos (2024). ggiraph: Make 'ggplot2' Graphics Interactive. R package version 0.8.9. <https://CRAN.R-project.org/package=ggiraph>\n\nWickham H, Averick M, Bryan J, Chang W, McGowan LD, François R, Grolemund G, Hayes A, Henry L, Hester J, Kuhn M, Pedersen TL, Miller E, Bache SM, Müller K, Ooms J, Robinson D, Seidel DP, Spinu V, Takahashi K, Vaughan D, Wilke C, Woo K, Yutani H (2019). \"Welcome to the tidyverse.\" Journal of Open Source Software, 4(43), 1686. <doi:10.21105/joss.01686>.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}